### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createPost(content: String, title: String): Post
  deletePost(postId: Int): Post
  publishPost(postId: Int): Post
}

type Post {
  content: String
  id: Int
  published: Boolean
  title: String
  users: users
}

type Query {
  Drafts: [Post]
  Post(postId: String!): Post
  Posts: [Post]
  subscriptionBy(userId: String!): [subscriptions]
}

"""Represents NULL values"""
scalar Void

type customers {
  id: ID!
  stripe_customer_id: String
  users: users!
}

type prices {
  active: Boolean
  currency: String
  description: String
  id: ID!
  interval: pricing_plan_interval
  interval_count: Int
  metadata: Json
  product_id: String
  products: products
  subscriptions: [subscriptions!]!
  trial_period_days: Int
  type: pricing_type
  unit_amount: BigInt
}

enum pricing_plan_interval {
  day
  month
  week
  year
}

enum pricing_type {
  one_time
  recurring
}

type products {
  active: Boolean
  description: String
  id: ID!
  image: String
  metadata: Json
  name: String
  prices: [prices!]!
}

enum subscription_status {
  active
  canceled
  incomplete
  incomplete_expired
  past_due
  trialing
  unpaid
}

type subscriptions {
  cancel_at: DateTime
  cancel_at_period_end: Boolean
  canceled_at: DateTime
  created: DateTime!
  current_period_end: DateTime!
  ended_at: DateTime
  id: ID!
  metadata: Json
  price_id: String
  prices: prices
  quantity: Int
  status: subscription_status
  trial_start: DateTime
  user_id: String!
  users: users!
}

type users {
  avatar_url: String
  email: String!
  emailVerified: DateTime
  full_name: String
  id: ID!
  posts: [Post!]!
}
